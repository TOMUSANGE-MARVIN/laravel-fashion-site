name: Laravel Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.2'
    - uses: actions/checkout@v4
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test

  deploy:
    needs: laravel-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    environment:
      name: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
    
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
        
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: composer install --no-dev --optimize-autoloader
        
    - name: Generate key
      run: php artisan key:generate
    
    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        eval $(ssh-agent -s)
        ssh-add ~/.ssh/deploy_key
        cat >>~/.ssh/config <<END
        Host vps
          HostName ${{ secrets.SSH_HOST }}
          User ${{ secrets.SSH_USERNAME }}
          IdentityFile ~/.ssh/deploy_key
          StrictHostKeyChecking no
          AddKeysToAgent yes
        END
        
        # Debug SSH key format (will be masked in logs)
        head -n 1 ~/.ssh/deploy_key | grep -q "BEGIN" || echo "Invalid key format"
        
    - name: Test SSH connection
      run: ssh vps 'echo "SSH connection successful"'
        
    - name: Deploy to VPS
      run: |
        rsync -avz --delete \
          --exclude='.git*' \
          --exclude='*.env' \
          --exclude='storage/' \
          --exclude='tests/' \
          --exclude='node_modules/' \
          -e "ssh -o StrictHostKeyChecking=no" \
          ./ vps:${{ secrets.DEPLOY_PATH }}
        
    - name: Post Deploy Commands
      run: |
        ssh vps "cd ${{ secrets.DEPLOY_PATH }} && \
        php artisan down && \
        php artisan migrate --force && \
        php artisan db:seed --force && \
        php artisan config:cache && \
        php artisan route:cache && \
        php artisan view:cache && \
        php artisan storage:link && \
        sudo systemctl reload php8.2-fpm && \
        sudo systemctl reload nginx && \
        php artisan up"
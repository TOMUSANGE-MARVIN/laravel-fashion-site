name: COTE Blogs Application

on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: self-hosted

    env:
      APP_PATH: /home/deployer/actions-runner/msf/laravel-fashion-site/laravel-fashion-site
    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, json, mbstring, pdo, zip

    - name: Checkout code
      uses: actions/checkout@v4

    # - name: Create environment file
    #   run: |
    #     cd ${{ env.APP_PATH }}
    #     cp .env.example .env

    - name: Configure environment variables
      env:
        DB_CONNECTION: ${{ secrets.DB_CONNECTION }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        APP_URL: ${{ secrets.APP_URL }}
        APP_NAME: ${{ secrets.APP_NAME }}
        APP_ENV: ${{ secrets.APP_ENV }}
        APP_DEBUG: ${{ secrets.APP_DEBUG }}
        MAIL_MAILER: ${{ secrets.MAIL_MAILER }}
        MAIL_HOST: ${{ secrets.MAIL_HOST }}
        MAIL_PORT: ${{ secrets.MAIL_PORT }}
        MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
        MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
        MAIL_ENCRYPTION: ${{ secrets.MAIL_ENCRYPTION }}
        MAIL_FROM_ADDRESS: ${{ secrets.MAIL_FROM_ADDRESS }}
      run: |
        cd ${{ env.APP_PATH }}
        echo "APP_NAME=\"${APP_NAME}\"" >> .env
        echo "APP_ENV=local" >> .env
        echo "APP_DEBUG=true" >> .env
        echo "APP_KEY=" >> .env
        echo "APP_URL=${APP_URL}" >> .env
        echo "" >> .env
        echo "DB_CONNECTION=${DB_CONNECTION}" >> .env
        echo "DB_HOST=${DB_HOST}" >> .env
        echo "DB_PORT=${DB_PORT}" >> .env
        echo "DB_DATABASE=${DB_DATABASE}" >> .env
        echo "DB_USERNAME=${DB_USERNAME}" >> .env
        echo "DB_PASSWORD=${DB_PASSWORD}" >> .env
        echo "" >> .env
        echo "MAIL_MAILER=${MAIL_MAILER}" >> .env
        echo "MAIL_HOST=${MAIL_HOST}" >> .env
        echo "MAIL_PORT=${MAIL_PORT}" >> .env
        echo "MAIL_USERNAME=${MAIL_USERNAME}" >> .env
        echo "MAIL_PASSWORD=${MAIL_PASSWORD}" >> .env
        echo "MAIL_ENCRYPTION=${MAIL_ENCRYPTION}" >> .env
        echo "MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}" >> .env

    - name: Install PHP dependencies
      run: |
        cd ${{ env.APP_PATH }}
        composer install --optimize-autoloader --no-dev --no-interaction --prefer-dist

    - name: Install Node dependencies and build assets
      run: |
        cd ${{ env.APP_PATH }}
        npm ci
        npm run build

    - name: Generate application key
      run: |
        cd ${{ env.APP_PATH }}
        php artisan key:generate --force

    - name: Clear all caches before migration
      run: |
        cd ${{ env.APP_PATH }}
        php artisan cache:clear
        php artisan config:clear
        php artisan route:clear
        php artisan view:clear

    - name: Run database migrations
      # env:
      #   DB_CONNECTION: ${{ secrets.DB_CONNECTION }}
      #   DB_HOST: ${{ secrets.DB_HOST }}
      #   DB_PORT: ${{ secrets.DB_PORT }}
      #   DB_DATABASE: ${{ secrets.DB_DATABASE }}
      #   DB_USERNAME: ${{ secrets.DB_USERNAME }}
      #   DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        cd ${{ env.APP_PATH }}
        php artisan migrate 
        echo "APP_DEBUG=true" >> .env
        echo "APP_ENV=production" >> .env

    - name: Optimize application for production
      run: |
        cd ${{ env.APP_PATH }}
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache

    - name: Create storage symbolic link
      run: |
        cd ${{ env.APP_PATH }}
        php artisan storage:link
